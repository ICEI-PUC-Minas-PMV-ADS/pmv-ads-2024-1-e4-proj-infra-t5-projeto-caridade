version: "3.8"

services:
  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb
  #   ports:
  #     - 27017:27017
  #   networks:
  #     - apigateway

  organizationservice:
    image: ${ORGANIZATIONSERVICE_IMAGE:-organizationservice}
    hostname: organizationservice
    build:
      context: ./OrganizationService
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    networks:
      - apigateway

  userservice:
    image: ${USERSERVICE_IMAGE:-userservice}
    hostname: userservice
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - ConnectionStrings_DefaultConnection="Host=db;Database=postgres;Username=postgres;Password=postgres"
    depends_on:
      - db
    networks:
      - apigateway
    
  db:
    container_name: db
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - apigateway

  reviewservice:
    image: ${REVIEWSERVICE_IMAGE:-reviewservice}
    hostname: reviewservice
    build:
      context: ./ReviewService
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    networks:
      - apigateway

  apigateway:
    image: ${APIGATEWAY_IMAGE:-apigateway}
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:80
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - organizationservice
      - userservice
      - reviewservice
      - db
    networks:
      - apigateway

networks:
  apigateway:
    name: apigateway

volumes:
  pgdata: {}